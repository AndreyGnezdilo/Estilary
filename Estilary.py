import telebot
from telebot import types
import os

BOT_TOKEN = os.environ.get("BOT_TOKEN")
bot = telebot.TeleBot(BOT_TOKEN)

user_data = {}

@bot.message_handler(commands=['start'])
def send_welcome(message):
    user_id = message.from_user.id
    if user_id in user_data:
        bot.send_message(message.chat.id, "–†–∞–¥—ã —á—Ç–æ –í—ã —Å –Ω–∞–º–∏! –í—ã–±–µ—Ä–µ—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –í–∞—Å –ø—É–Ω–∫—Ç –º–µ–Ω—é.")
        show_main_menu(message.chat.id)
    else:
        greet_msg = "–ü—Ä–∏–≤–µ—Ç! üëã\n–°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–∫—É–ø–∫—É –≤ –Ω–∞—à–µ–º –º–∞–≥–∞–∑–∏–Ω–µ! üõçÔ∏è\n–î–∞–≤–∞–π—Ç–µ –∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è! –ö–∞–∫ –≤–∞—Å –∑–æ–≤—É—Ç?"
        bot.send_message(message.chat.id, greet_msg)
        bot.register_next_step_handler(message, handle_name)

@bot.message_handler(content_types=['text'])
def handle_text(message):
    user_id = message.from_user.id
    if user_id in user_data:
        bot.send_message(message.chat.id, "–†–∞–¥—ã —á—Ç–æ –í—ã —Å –Ω–∞–º–∏! –í—ã–±–µ—Ä–µ—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –í–∞—Å –ø—É–Ω–∫—Ç –º–µ–Ω—é.")
        show_main_menu(message.chat.id)

def handle_name(message):
    user_name = message.text
    user_id = message.from_user.id
    user_data[user_id] = user_name

    bot.send_message(message.chat.id, f"–ö–∞–∫–æ–µ –∫—Ä–∞—Å–∏–≤–æ–µ –∏–º—è, {user_name}! –†–∞–¥—ã –∑–Ω–∞–∫–æ–º—Å—Ç–≤—É. ü•≥")
    bot.send_message(message.chat.id, "–£ –Ω–∞—Å –µ—Å—Ç—å –¥–ª—è –≤–∞—Å –ø–æ–¥–∞—Ä–æ–∫ - —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è –∫–Ω–∏–≥–∞. –ù–∞–¥–µ–µ–º—Å—è, –≤–∞–º –ø–æ–Ω—Ä–∞–≤–∏—Ç—Å—è! üéÅ")
    
    markup_gift = types.InlineKeyboardMarkup()
    btn_gift = types.InlineKeyboardButton("–ó–∞–±—Ä–∞—Ç—å –ø–æ–¥–∞—Ä–æ–∫ üéÅ", callback_data="get_gift")
    markup_gift.add(btn_gift)
    bot.send_message(message.chat.id, "–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –∑–∞–±—Ä–∞—Ç—å –≤–∞—à –ø–æ–¥–∞—Ä–æ–∫:", reply_markup=markup_gift)

@bot.callback_query_handler(func=lambda call: call.data == "get_gift")
def send_gift(call):
    with open('/Users/enot/Documents/ESTILARY/Surfing_Illustrated.pdf', 'rb') as book:
        bot.send_document(call.message.chat.id, book)
    
    markup_subscribe = types.InlineKeyboardMarkup()
    btn_subscribe = types.InlineKeyboardButton("–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–∞–Ω–∞–ª üöÄ", url="https://t.me/+RFGHFlCZT_kwZmNi")
    markup_subscribe.add(btn_subscribe)
    bot.send_message(call.message.chat.id, "–ë—É–¥–µ–º —Ä–∞–¥—ã, –µ—Å–ª–∏ –≤—ã –ø–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –Ω–∞—à —Ç–µ–ª–µ–≥—Ä–∞–º-–∫–∞–Ω–∞–ª. –¢–∞–º –º—ã –ø—É–±–ª–∏–∫—É–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–æ–≤—ã—Ö –∫–æ–ª–ª–µ–∫—Ü–∏—è—Ö –∏ –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º —ç–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–µ —Å–∫–∏–¥–∫–∏ –Ω–∞—à–∏–º –ø–æ–∫—É–ø–∞—Ç–µ–ª—è–º. üéâ", reply_markup=markup_subscribe)
    
    markup_feedback = types.InlineKeyboardMarkup()
    btn_feedback = types.InlineKeyboardButton("–°–≤—è–∑–∞—Ç—å—Å—è —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º", url="https://t.me/besmartshop_01")
    markup_feedback.add(btn_feedback)
    bot.send_message(call.message.chat.id, "–ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã –ø–æ —Ç–æ–≤–∞—Ä—É, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é –∫–Ω–æ–ø–∫—É:", reply_markup=markup_feedback)

def show_main_menu(chat_id):
    markup = types.InlineKeyboardMarkup()
    btn_gift = types.InlineKeyboardButton("–ó–∞–±—Ä–∞—Ç—å –ø–æ–¥–∞—Ä–æ–∫ üéÅ", callback_data="get_gift")
    btn_subscribe = types.InlineKeyboardButton("–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–∞–Ω–∞–ª üöÄ", url="https://t.me/+RFGHFlCZT_kwZmNi")
    btn_feedback = types.InlineKeyboardButton("–°–≤—è–∑–∞—Ç—å—Å—è —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º", url="https://t.me/besmartshop_01")
    markup.add(btn_gift)
    markup.add(btn_subscribe)
    markup.add(btn_feedback)
    bot.send_message(chat_id, "–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å –ø—É–Ω–∫—Ç:", reply_markup=markup)

bot.infinity_polling()
